import streamlit as st
import pandas as pd
import plotly.express as px
from datetime import datetime

# Configuraci√≥n de la p√°gina
st.set_page_config(layout="wide", page_title="Dashboard Proyecci√≥n Financiera")
st.title("üìä Dashboard de Proyecci√≥n Financiera 2025-2027")

# --- Funci√≥n para cargar datos ---
@st.cache_data
def load_data(uploaded_file):
    try:
        df = pd.read_excel(uploaded_file, sheet_name="Proyeccion 2025-26-27")
        
        # Limpieza de datos
        df['Fecha'] = pd.to_datetime(df['Fecha'])
        df['A√±o'] = df['Fecha'].dt.year
        df['Mes'] = df['Fecha'].dt.month_name(locale='es')
        
        return df
    except Exception as e:
        st.error(f"Error al cargar el archivo: {str(e)}")
        return None

# --- Carga del archivo ---
uploaded_file = st.file_uploader("Sube tu archivo Excel (Proyeccion 3.xlsx)", type="xlsx")

if not uploaded_file:
    st.warning("Por favor, sube un archivo Excel para continuar.")
    st.stop()

df = load_data(uploaded_file)

if df is None:
    st.error("No se pudieron cargar los datos. Verifica el formato del archivo.")
    st.stop()

# --- Sidebar con filtros ---
st.sidebar.header("Filtros")
selected_year = st.sidebar.selectbox("Selecciona el a√±o", options=df['A√±o'].unique())
df_filtered = df[df['A√±o'] == selected_year]

# --- Secci√≥n de KPIs ---
st.header("üîç KPIs Clave")

# Calculamos los KPIs
total_facturacion = df_filtered["Total Facturaci√≥n"].sum() / 1000  # En miles
facturacion_quirurgico = df_filtered["Facturaci√≥n Quir√∫rgico VITHAS"].sum() / 1000
pacientes_totales = df_filtered["No. De Pacientes CCEE"].sum()
intervenciones = df_filtered["No. De Intervenciones Quir√∫rgicas"].sum()
modulos_promedio = df_filtered["M√≥dulos Totales x d√≠a"].mean()
urgencias_mes = df_filtered["No. Urgencias Mes"].sum()
precio_medio_consultas = df_filtered["Precio Medio Consultas CCEE"].mean()
precio_medio_quirurgico = df_filtered["Precio Medio HHMM Quir√∫rgicas"].mean()
crecimiento_anual = ((df[df['A√±o'] == selected_year]["Total Facturaci√≥n"].sum() / 
                     df[df['A√±o'] == (selected_year - 1)]["Total Facturaci√≥n"].sum() - 1)) * 100

# Mostramos los KPIs en columnas
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("Facturaci√≥n Total (Miles ‚Ç¨)", f"{total_facturacion:,.0f}K")
    st.metric("Pacientes Totales CCEE", f"{pacientes_totales:,.0f}")
    st.metric("M√≥dulos Diarios Promedio", f"{modulos_promedio:.1f}")

with col2:
    st.metric("Facturaci√≥n Quir√∫rgico (Miles ‚Ç¨)", f"{facturacion_quirurgico:,.0f}K")
    st.metric("Intervenciones Quir√∫rgicas", f"{intervenciones:,.0f}")
    st.metric("Urgencias Totales", f"{urgencias_mes:,.0f}")

with col3:
    st.metric("Crecimiento Anual (%)", f"{crecimiento_anual:.1f}%")
    st.metric("Precio Medio Consultas (‚Ç¨)", f"{precio_medio_consultas:,.0f}")
    st.metric("Precio Medio Quir√∫rgico (‚Ç¨)", f"{precio_medio_quirurgico:,.0f}")

# --- Gr√°ficos ---
st.header("üìà Visualizaciones Clave")

# Gr√°fico 1: Facturaci√≥n por √°reas
fig1 = px.bar(df_filtered, 
              x="Mes", 
              y=["Facturaci√≥n CCEE VITHAS", "Facturaci√≥n Quir√∫rgico VITHAS", "Facturaci√≥n Urgencias VITHAS"],
              title=f"Facturaci√≥n por √Årea ({selected_year})",
              labels={"value": "Facturaci√≥n (‚Ç¨)", "variable": "√Årea"})
st.plotly_chart(fig1, use_container_width=True)

# Gr√°fico 2: Evoluci√≥n mensual
fig2 = px.line(df_filtered, 
               x="Fecha", 
               y="Total Facturaci√≥n",
               title=f"Evoluci√≥n Mensual de Facturaci√≥n ({selected_year})")
st.plotly_chart(fig2, use_container_width=True)

# Gr√°fico 3: Distribuci√≥n de facturaci√≥n
fig3 = px.pie(df_filtered,
              names=["CCEE", "Quir√∫rgico", "Urgencias"],
              values=[df_filtered["Facturaci√≥n CCEE VITHAS"].sum(), 
                      df_filtered["Facturaci√≥n Quir√∫rgico VITHAS"].sum(),
                      df_filtered["Facturaci√≥n Urgencias VITHAS"].sum()],
              title="Distribuci√≥n de Facturaci√≥n")
st.plotly_chart(fig3, use_container_width=True)

# Gr√°fico 4: Pacientes vs M√≥dulos
fig4 = px.scatter(df_filtered,
                 x="No. De Pacientes CCEE",
                 y="M√≥dulos Totales x d√≠a",
                 size="Total Facturaci√≥n",
                 color="Mes",
                 title="Relaci√≥n Pacientes vs M√≥dulos")
st.plotly_chart(fig4, use_container_width=True)

# Gr√°fico 5: Intervenciones quir√∫rgicas
fig5 = px.bar(df_filtered,
             x="Mes",
             y="No. De Intervenciones Quir√∫rgicas",
             title=f"Intervenciones Quir√∫rgicas ({selected_year})")
st.plotly_chart(fig5, use_container_width=True)

# Gr√°fico 6: Urgencias
fig6 = px.area(df_filtered,
              x="Fecha",
              y="No. Urgencias Mes",
              title=f"Urgencias Mensuales ({selected_year})")
st.plotly_chart(fig6, use_container_width=True)

# --- Mostrar datos ---
if st.checkbox("Mostrar datos crudos"):
    st.dataframe(df_filtered)
